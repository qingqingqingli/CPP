[General rules]

- Any function implemented in a header (except for templates), and any unprotected header
means 0 to the exercise

- Every output goes to the stdout will be ended by a newline, unless specified otherwise

- File names, class names, function names and method names need to be exactly the same as specified

- Remember, you are coding in C++ now. 
** Forbidden to use: alloc, printf, free
** You are allowed to use everything in the standard library. But use C++ version of functions
** Not allowed to use the STL until module 08

- No use of explicitly forbidden function

- C++ keywords "using namespace" and "friend" are forbidden

- Files associated with a class will always be ClassName.hpp and ClassName.cpp, unless specified otherwise

- Read the examples thoroughly. They can contain requirements that are not obvious in the exercise's description.
If something seems ambiguous, you don't understand C++ enough

- Not allowed to use any external library

- You may be required to turn in an important number of classes. This can seem tedious, unless you're
able to script your favorite text editor

- Read each exercise FULLY before starting it

- Compiler: Clang++

- Flags: -Wall -Wextra -Werror

- Each of the includes must be able to be included independently from others. Includes must contains
every other includes they're depending on.

- No coding style is enforced

- Not graded by a program. You have a certain amount of freedom in how you choose to do the exercises

- Not a problem to turn in some extraneous files

- Spend enough time to understand each module